name: Publish to Cloudflare Pages

on: [push]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Publish to Cloudflare Pages

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      # npm cache
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      # Populate Bundle Information
      # export const BUNDLE = {
      #   gitCommit: (import.meta.env.VITE_GIT_COMMIT as string) || "unknown",
      #   buildNumber: (import.meta.env.VITE_BUILD_NUMBER as string) || "?",
      #   buildTime:
      #     (import.meta.env.VITE_BUILD_TIME as string) || "????-??-??T??:??:??+00:00",
      # };
      - name: Populate Bundle Information
        id: bundle-info
        shell: bash
        run: |
          echo "VITE_GIT_COMMIT=$(git rev-parse HEAD)" >> ${GITHUB_ENV}
          echo "VITE_BUILD_NUMBER=${{ github.run_number }}" >> ${GITHUB_ENV}
          echo "VITE_BUILD_TIME=$(date --utc +%FT%TZ)" >> ${GITHUB_ENV}

      # Run a build step here if your project requires
      # building before publishing to Cloudflare Pages.
      - name: Build
        run: yarn install && yarn run build

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: dxrating
          directory: apps/web/dist
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
